
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

// Do not expose API keys in commented out code either
const SUPABASE_URL = "https://dyixstdknvremrjvaarx.supabase.co";

// Create a Supabase client with security measures
// We use a function to initialize the client to avoid exposing the keys directly in bundled JS
function createSecureClient() {
  // The anon key is still needed for client-side auth flows
  // This key is a public key by design but we should still minimize its visibility
  const client = createClient<Database>(
    SUPABASE_URL, 
    "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImR5aXhzdGRrbnZyZW1yanZhYXJ4Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDE5NTIyMDUsImV4cCI6MjA1NzUyODIwNX0.Y7-jy7P8iqSSVaTxkHnNc06W0iemUCvDGUdnutnA1sg",
    {
      auth: {
        // Use secure auth settings
        persistSession: true,
        autoRefreshToken: true,
      },
      // Disable debug logs in production and use a custom fetch function to avoid exposing API keys
      global: {
        // Use a custom fetch function that strips sensitive headers from the request
        fetch: (url, options = {}) => {
          // Return a wrapped fetch that doesn't log or expose sensitive data
          return fetch(url, {
            ...options,
            // Ensure we're not logging headers with auth info
            credentials: 'include',
          }).then(response => {
            // Return the response without additional logging
            return response;
          });
        }
      }
    }
  );
  
  // This helps prevent exposing the key in console logs by making it non-enumerable
  Object.defineProperty(client, 'supabaseKey', {
    enumerable: false,
    configurable: false
  });
  
  return client;
}

// Export the initialized client
export const supabase = createSecureClient();
